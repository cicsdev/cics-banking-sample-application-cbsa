/*
 *
 *    Copyright IBM Corp. 2023
 *
 *
 */

package com.ibm.cics.cip.bankliberty.datainterfaces;
import com.ibm.jzos.fields.*;

// Generated by IBM Record Generator for Java V3.0.2 Build 20221206-1121 on: Tue Feb 14 07:28:17 CST 2023

public class NewCustomerNumber {
	protected static CobolDatatypeFactory factory = new CobolDatatypeFactory();
	static { factory.setStringTrimDefault(false); }

	/** <pre>
	 01 COBOL-LANGUAGE-STRUCTURE. </pre> */
	public static final int COBOL_LANGUAGE_STRUCTURE_LEN = 13;

	/** <pre>
	     03 NEWCUSNO-FUNCTION  PIC X. </pre> */
	protected static final StringField NEWCUSNO_FUNCTION = factory.getStringField(1);

	/** <pre>
	     88 NEWCUSNO-FUNCTION-GETNEW VALUE 'G'. </pre> */
	public static final String NEWCUSNO_FUNCTION_GETNEW = "G";

	/** <pre>
	     88 NEWCUSNO-FUNCTION-ROLLBACK VALUE 'R'. </pre> */
	public static final String NEWCUSNO_FUNCTION_ROLLBACK = "R";

	/** <pre>
	     88 NEWCUSNO-FUNCTION-CURRENT VALUE 'C'. </pre> */
	public static final String NEWCUSNO_FUNCTION_CURRENT = "C";

	/** <pre>
	     03 CUSTOMER-NUMBER                 PIC 9(10) DISPLAY. </pre> */
	protected static final ExternalDecimalAsLongField CUSTOMER_NUMBER = factory.getExternalDecimalAsLongField(10, false, false, false, false);

	/** <pre>
	     03 NEWCUSNO-SUCCESS                    PIC X. </pre> */
	protected static final StringField NEWCUSNO_SUCCESS = factory.getStringField(1);

	/** <pre>
	     03 NEWCUSNO-FAIL-CODE                  PIC X. </pre> */
	protected static final StringField NEWCUSNO_FAIL_CODE = factory.getStringField(1);

	protected byte[] byteBuffer;
	// Instance variables used to cache field values
	protected String newcusnoFunction;
	protected long customerNumber;
	protected boolean customerNumberIsSet;
	protected String newcusnoSuccess;
	protected String newcusnoFailCode;


	public NewCustomerNumber (byte[] buffer) {
		this.byteBuffer = buffer;
	}

	public NewCustomerNumber () {
		this.byteBuffer = new byte[COBOL_LANGUAGE_STRUCTURE_LEN];
	}

	public byte[] getByteBuffer() {
		return byteBuffer;
	}


	public String getNewcusnoFunction() {
		if (newcusnoFunction == null) {
			newcusnoFunction = NEWCUSNO_FUNCTION.getString(byteBuffer);
		}
		return newcusnoFunction;
	}

	public void setNewcusnoFunction(String newcusnoFunction) {
		if (NEWCUSNO_FUNCTION.equals(this.newcusnoFunction, newcusnoFunction)) {
			return;
		}
		NEWCUSNO_FUNCTION.putString(newcusnoFunction, byteBuffer);
		this.newcusnoFunction = newcusnoFunction;
	}

	public boolean isNewcusnoFunctionGetnew() {
		return getNewcusnoFunction().equals(NEWCUSNO_FUNCTION_GETNEW);
	}

	public boolean isNewcusnoFunctionRollback() {
		return getNewcusnoFunction().equals(NEWCUSNO_FUNCTION_ROLLBACK);
	}

	public boolean isNewcusnoFunctionCurrent() {
		return getNewcusnoFunction().equals(NEWCUSNO_FUNCTION_CURRENT);
	}

	public long getCustomerNumber() {
		if (!customerNumberIsSet) {
			customerNumber = CUSTOMER_NUMBER.getLong(byteBuffer);
			customerNumberIsSet = true;
		}
		return customerNumber;
	}

	public void setCustomerNumber(long customerNumber) {
		if (customerNumberIsSet && CUSTOMER_NUMBER.equals(this.customerNumber, customerNumber)) {
			return;
		}
		CUSTOMER_NUMBER.putLong(customerNumber, byteBuffer);
		this.customerNumber = customerNumber;
		customerNumberIsSet = true;
	}

	public String getNewcusnoSuccess() {
		if (newcusnoSuccess == null) {
			newcusnoSuccess = NEWCUSNO_SUCCESS.getString(byteBuffer);
		}
		return newcusnoSuccess;
	}

	public void setNewcusnoSuccess(String newcusnoSuccess) {
		if (NEWCUSNO_SUCCESS.equals(this.newcusnoSuccess, newcusnoSuccess)) {
			return;
		}
		NEWCUSNO_SUCCESS.putString(newcusnoSuccess, byteBuffer);
		this.newcusnoSuccess = newcusnoSuccess;
	}

	public String getNewcusnoFailCode() {
		if (newcusnoFailCode == null) {
			newcusnoFailCode = NEWCUSNO_FAIL_CODE.getString(byteBuffer);
		}
		return newcusnoFailCode;
	}

	public void setNewcusnoFailCode(String newcusnoFailCode) {
		if (NEWCUSNO_FAIL_CODE.equals(this.newcusnoFailCode, newcusnoFailCode)) {
			return;
		}
		NEWCUSNO_FAIL_CODE.putString(newcusnoFailCode, byteBuffer);
		this.newcusnoFailCode = newcusnoFailCode;
	}

}
